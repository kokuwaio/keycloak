apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: prometheus
    spec:
      containers:
        - name: prometheus
          image: ${image.prometheus}
          imagePullPolicy: IfNotPresent
          args:
            - --storage.tsdb.path=/data
            - --config.file=/etc/config/prometheus.yaml
          ports:
            - name: http
              containerPort: 9090
          startupProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 55
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
          volumeMounts:
            - name: config
              mountPath: /etc/config/prometheus.yaml
              subPath: config.yaml
              readOnly: true
            - name: data
              mountPath: /data
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
      automountServiceAccountToken: true
      serviceAccountName: prometheus
      terminationGracePeriodSeconds: 10
      volumes:
        - name: config
          configMap:
            name: prometheus
        - name: data
          emptyDir: {}
