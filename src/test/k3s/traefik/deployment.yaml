apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: traefik
  template:
    metadata:
      labels:
        app.kubernetes.io/name: traefik
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8090"
        prometheus.io/path: /metrics
    spec:
      containers:
        - name: traefik
          image: ${image.traefik}
          imagePullPolicy: Never
          args:
            - --providers.kubernetesingress=true
            - --entrypoints.traefik.address=:8090
            - --entrypoints.http.address=:8080
            - --accesslog=true
            - --accesslog.fields.defaultmode=keep
            - --accesslog.fields.headers.defaultmode=keep
            - --ping=true
            - --api.insecure=true
            - --api.dashboard=true
            - --metrics.prometheus=true
            - --global.checknewversion=false
            - --global.sendAnonymousUsage=false
          ports:
            - name: http
              containerPort: 8080
              hostPort: 8080
            - name: admin
              containerPort: 8090
          startupProbe:
            httpGet:
              path: /ping
              port: admin
            initialDelaySeconds: 1
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 60
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            readOnlyRootFilesystem: true
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
      automountServiceAccountToken: true
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 0
